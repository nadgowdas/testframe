#instructions adapted from https://medium.com/on-docker/use-multi-stage-builds-to-inject-ca-certs-ad1e8f01de1b

FROM alpine:latest as certs
RUN apk --update add ca-certificates

FROM golang:1.9.1 as app

WORKDIR /go/src/github.ibm.com/alchemy-containers/armada-api/
COPY . /go/src/github.ibm.com/alchemy-containers/armada-api/
RUN make buildgo

FROM scratch

ARG this_build_id=dev
ARG this_build_sha=dev

ENV BUILD_ID=${this_build_id}
ENV BUILD_SHA=${this_build_sha}
LABEL "alchemy-containers.armada-api.build"="$this_build_id"
LABEL "alchemy-containers.armada-api.build.sha"="$this_build_sha"

COPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

COPY etc/* /go/src/github.ibm.com/alchemy-containers/armada-api/etc/
COPY vendor/github.ibm.com/alchemy-containers/armada-auth/etc/* /go/src/github.ibm.com/alchemy-containers/armada-api/vendor/github.ibm.com/alchemy-containers/armada-auth/etc/
COPY i18n/resources/* /go/src/github.ibm.com/alchemy-containers/armada-api/i18n/resources/
COPY templates/* /go/src/github.ibm.com/alchemy-containers/armada-api/templates/
COPY --from=app /go/src/github.ibm.com/alchemy-containers/armada-api/armada-api /go/bin/

ENV GOPATH /go

# Run the api command and log to standard error by default.
ENTRYPOINT ["/go/bin/armada-api"]

# Service listens on port 6969.
EXPOSE 6969